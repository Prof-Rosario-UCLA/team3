# docker/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: campfire-ingress # A unique name for your Ingress resource
  annotations:
    kubernetes.io/ingress.class: "gce" # Tells Kubernetes to use the GKE Ingress controller
    # networking.gke.io/managed-certificates: "mcrt-aa7021c1-3366-4343-8475-0331a4390d6d" # <--- Reference your ManagedCertificate name
    networking.gke.io/pre-shared-certs: "mcrt-04c7ee9f-c3f1-4ed9-91f7-9b89c42e9a9a"
    kubernetes.io/ingress.global-static-ip-name: "campfire-ip" # <--- Reference your reserved static IP name
    # Optional: Configure HTTP to HTTPS redirect (recommended for production)
    networking.gke.io/v1beta1.FrontendConfig: "default-frontend-config" # <--- Reference a FrontendConfig below
    ingress.kubernetes.io/enable-websockets: "true"
spec:
  # tls: # This block enables TLS/HTTPS
  # - secretName: campfire-cert # Google-managed certs create a secret with this name
  #   hosts:
  #   - campfire.howard-zhu.com    # <--- REPLACE with your actual domain name
  #   - www.campfire.howard-zhu.com # <--- Add if you also configured 'www'
  rules:
  - host: campfire.howard-zhu.com # <--- REPLACE with your actual domain name
    http:
      paths:
      - path: /* # Matches all paths
        pathType: ImplementationSpecific # Or Prefix
        backend:
          service:
            name: campfire-service # <--- Your existing service name
            port:
              number: 80 # <--- The port your service exposes (from service.yaml)
  - host: www.campfire.howard-zhu.com # If you use www, duplicate the rule
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: campfire-service
            port:
              number: 80